apply plugin: 'com.android.application'

def getVersionName = { ->
    def stdout = new ByteArrayOutputStream()
    exec {
        commandLine 'git', 'describe'
        standardOutput = stdout
    }
    def versionName = stdout.toString().trim().split('-')

    if (versionName.length == 1)
        return versionName[0] + '.0'

    return versionName[0] + '.' + versionName[1]
}

def getVersionCode = { ->
    def numbers = getVersionName().split('\\.') as Integer[]
    return numbers.getAt(0) * 5000 + numbers.getAt(1) * 3000 + numbers.getAt(2)
}

android {
    generateSigningConfigs()
    compileSdkVersion 29
    buildToolsVersion "29.0.2"
    defaultConfig {
        applicationId "com.example.greetings"
        minSdkVersion 23
        targetSdkVersion 29
        versionCode = getVersionCode()
        versionName = getVersionName()
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.appcompat:appcompat:1.0.2'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test:runner:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.1'
}

def generateSigningConfigs() {
    def keystorePropertiesFile = rootProject.file('keystore.properties')
    def keystoreProperties = new Properties()
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
    android.signingConfigs {
        release {
            keyAlias = keystoreProperties['keyAlias']
            keyPassword = keystoreProperties['keyPassword']
            storeFile = new File(keystoreProperties['storeFile'])
            storePassword = keystoreProperties['storePassword']
            v1SigningEnabled true
            v2SigningEnabled true
        }
    }
    android.buildTypes {
        release {
            signingConfig android.signingConfigs.release
        }
    }
}